name: Deploy to Fly.io

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build
      working-directory: ./backend
      run: npm run build
    
    - name: Setup Flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master
    
    - name: Deploy backend to Fly.io
      working-directory: ./backend
      run: |
        # Set necessary secrets
        # The secrets are already configured in the Fly.io dashboard or via flyctl secrets set
        # DATABASE_URL, DATABASE_AUTH_TOKEN, JWT_SECRET, etc.
        
        # Deploy the application
        flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_BACKEND }}

  deploy-frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    needs: deploy-backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build
      working-directory: ./frontend
      run: npm run build
    
    - name: Setup Flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master
    
    - name: Deploy frontend to Fly.io
      working-directory: ./frontend
      run: |
        # Note: The VITE_API_URL should not have a trailing slash
        # The frontend code will handle URLs consistently
        flyctl deploy --remote-only --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }}
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_FRONTEND }}